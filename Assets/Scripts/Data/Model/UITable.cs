// Generated by github.com/davyxu/tabtoy
// Version: 2.9.0
// DO NOT EDIT!!
using System.Collections.Generic;

namespace Table
{
	
	// Defined in table: UI
	public enum En_UIForm
	{
		
		/// <summary> 
		/// UI画布
		/// </summary>
		Canvas = 0, 
		
		/// <summary> 
		/// 启动界面
		/// </summary>
		StartUpForm = 1, 
		
		/// <summary> 
		/// 登录界面
		/// </summary>
		LoginForm = 2, 
		
		/// <summary> 
		/// 加载界面
		/// </summary>
		LoadingForm = 3, 
		
		/// <summary> 
		/// 首页
		/// </summary>
		HomePageForm = 4, 
		
		/// <summary> 
		/// 大厅界面
		/// </summary>
		LobbyForm = 5, 
		
		/// <summary> 
		/// 编辑物体界面
		/// </summary>
		EditorForm = 6, 
		
		/// <summary> 
		/// 系统管理界面
		/// </summary>
		SystemManagementForm = 7, 
		
		/// <summary> 
		/// 资源管理界面
		/// </summary>
		ResourcesManagementForm = 8, 
		
		/// <summary> 
		/// 场景管理界面
		/// </summary>
		SceneManagementForm = 9, 
		
		/// <summary> 
		/// 事故管理界面
		/// </summary>
		AccidentManagementForm = 10, 
		
		/// <summary> 
		/// 消息提示界面
		/// </summary>
		MsgForm = 11, 
		
		/// <summary> 
		/// 公司协议界面
		/// </summary>
		CompanyProtoForm = 12, 
		
		/// <summary> 
		/// 反馈界面
		/// </summary>
		FeedBackForm = 13, 
		
		/// <summary> 
		/// 机构管理界面
		/// </summary>
		OrganizationManagementForm = 14, 
		
		/// <summary> 
		/// 用户管理界面
		/// </summary>
		UserManagementForm = 15, 
		
		/// <summary> 
		/// 日志管理界面
		/// </summary>
		LogManagementForm = 16, 
		
		/// <summary> 
		/// 通用提示界面
		/// </summary>
		TipForm = 17, 
		
		/// <summary> 
		/// 新增公司
		/// </summary>
		AddCompanyForm = 18, 
		
		/// <summary> 
		/// 新增机构
		/// </summary>
		AddOrganizeForm = 19, 
		
		/// <summary> 
		/// 新增用户界面
		/// </summary>
		AddUserForm = 20, 
		
		/// <summary> 
		/// 用户详情界面
		/// </summary>
		UserDetailsForm = 21, 
		
		/// <summary> 
		/// 重置密码界面
		/// </summary>
		ResetPasswordForm = 22, 
		
		/// <summary> 
		/// 场景编辑工具条界面
		/// </summary>
		SceneEditToolBarForm = 23, 
		
		/// <summary> 
		/// 场景编辑基本信息界面
		/// </summary>
		SceneEditBaseInfoForm = 24, 
		
		/// <summary> 
		/// 编辑组织信息
		/// </summary>
		OragnizeEditForm = 25, 
		
		/// <summary> 
		/// 场景编辑设备信息界面
		/// </summary>
		SceneEditDeviceForm = 26, 
		
		/// <summary> 
		/// 场景编辑远程开关界面
		/// </summary>
		SceneEditRemoteSwitchForm = 27, 
		
		/// <summary> 
		/// 场景物体编辑界面
		/// </summary>
		SceneObjectEditForm = 28, 
		
		/// <summary> 
		/// 场景添加界面
		/// </summary>
		AddSceneForm = 29, 
		
		/// <summary> 
		/// 标签编辑界面
		/// </summary>
		LabelEditForm = 30, 
		
		/// <summary> 
		/// 2D标签管理
		/// </summary>
		UILabelManagerForm = 31, 
		
		/// <summary> 
		/// 场景加载界面
		/// </summary>
		SceneLoadingForm = 32, 
		
		/// <summary> 
		/// 设备信息界面
		/// </summary>
		DeviceInfoForm = 33, 
		
		/// <summary> 
		/// 物品类型界面
		/// </summary>
		ItemTypeForm = 34, 
		
		/// <summary> 
		/// 添加远程开关界面
		/// </summary>
		AddRemoteSwitchForm = 35, 
		
		/// <summary> 
		/// 提示说明界面
		/// </summary>
		TextTooltipForm = 36, 
		
		/// <summary> 
		/// 场景过渡/案例片播放界面
		/// </summary>
		SplashScreenForm = 37, 
		
		/// <summary> 
		/// 物体操作界面
		/// </summary>
		UIOperationForm = 38, 
		
		/// <summary> 
		/// 功能分区信息界面
		/// </summary>
		SceneAreaInfoForm = 39, 
		
		/// <summary> 
		/// 场景编辑界面
		/// </summary>
		SceneEditorForm = 40, 
		
		/// <summary> 
		/// 事故编辑大厅界面
		/// </summary>
		AccidentEditLobbyForm = 41, 
		
		/// <summary> 
		/// 基础信息界面
		/// </summary>
		AccidentBaseInfoForm = 42, 
		
		/// <summary> 
		/// 应急力量界面
		/// </summary>
		EmergencyPowerForm = 43, 
		
		/// <summary> 
		/// 应急队伍界面
		/// </summary>
		EmergencyTeamForm = 44, 
		
		/// <summary> 
		/// 应急措施界面
		/// </summary>
		EmergencyMeasureForm = 45, 
		
		/// <summary> 
		/// 应急任务界面
		/// </summary>
		EmergencyTaskForm = 46, 
		
		/// <summary> 
		/// 评估标准界面
		/// </summary>
		EvaluativeCriteriaForm = 47, 
		
		/// <summary> 
		/// 事故设定界面
		/// </summary>
		AccidentSettingForm = 48, 
		
		/// <summary> 
		/// 演练规则界面
		/// </summary>
		PracticeRulesForm = 49, 
		
		/// <summary> 
		/// 添加事故信息界面
		/// </summary>
		AddAccidentInfoForm = 50, 
		
		/// <summary> 
		/// 场景物体大小编辑界面
		/// </summary>
		SceneObjectSizeForm = 51, 
		
		/// <summary> 
		/// 设备信息编辑界面
		/// </summary>
		SceneDeviceInfoForm = 52, 
		
		/// <summary> 
		/// 添加应急任务类型界面
		/// </summary>
		AddEmergencyTaskTypeForm = 53, 
		
		/// <summary> 
		/// 添加应急任务界面
		/// </summary>
		AddEmergencyTaskForm = 54, 
		
		/// <summary> 
		/// 任务步骤编辑界面
		/// </summary>
		QuestsProcedureForm = 55, 
		
		/// <summary> 
		/// 操作目标物体界面
		/// </summary>
		OperateObjectForm = 56, 
		
		/// <summary> 
		/// 穿戴个体防护界面
		/// </summary>
		WearEquipmentForm = 57, 
		
		/// <summary> 
		/// 到达目的地界面
		/// </summary>
		ArriveToPointForm = 58, 
		
		/// <summary> 
		/// 使用应急措施界面
		/// </summary>
		TakeMeasuresForm = 59, 
		
		/// <summary> 
		/// 使用电话汇报界面
		/// </summary>
		TelReportForm = 60, 
		
		/// <summary> 
		/// 查找弹窗界面
		/// </summary>
		SearchInfoForm = 61, 
		
		/// <summary> 
		/// 发布任务内容编辑界面
		/// </summary>
		PublishTaskEditForm = 62, 
		
		/// <summary> 
		/// 任务流程界面
		/// </summary>
		TaskProcedureForm = 63, 
		
		/// <summary> 
		/// 新增岗位界面
		/// </summary>
		AddDutyForm = 64, 
		
		/// <summary> 
		/// 新增应急力量角色界面
		/// </summary>
		AddMemberForm = 65, 
		
		/// <summary> 
		/// 添加电话汇报内容界面
		/// </summary>
		AddTelReportContentForm = 66, 
		
		/// <summary> 
		/// 应急力量角色编辑界面
		/// </summary>
		EmergencyObjectEditorForm = 67, 
	
	}
	
	

	// Defined in table: UITableModel
	
  [System.Serializable]
	public partial class UITableModel
	{
	
		public Tabtoy.Logger TableLogger = Tabtoy.Logger.Instance();
	
		
		/// <summary> 
		/// UI
		/// </summary>
		public List<UIDefine> UI = new List<UIDefine>(); 
	
	
		#region Index code
	 	Dictionary<int, UIDefine> _UIByid = new Dictionary<int, UIDefine>();
        public UIDefine GetUIById(int id, UIDefine def = default(UIDefine))
        {
            UIDefine ret;
            if ( _UIByid.TryGetValue( id, out ret ) )
            {
                return ret;
            }
			
			if ( def == default(UIDefine) )
			{
				TableLogger.ErrorLine("GetUIByid failed, id: {0}", id);
			}

            return def;
        }
		
		public string GetBuildID(){
			return "d41d8cd98f00b204e9800998ecf8427e";
		}
	
		#endregion
      public static void Deserialize( UITableModel ins)
		{
            			// Build UI Index
			for( int i = 0;i< ins.UI.Count;i++)
			{
				var element = ins.UI[i];
				
				ins._UIByid.Add(element.id, element);
				
			}

        }
        
      public void DeserializeRe( UITableModel ins)
		{
            			// Build UI Index
			for( int i = 0;i< ins.UI.Count;i++)
			{
				var element = ins.UI[i];
				
				if(!_UIByid.ContainsKey(element.id))
				{
					this.UI.Add(ins.UI[i]);
					_UIByid.Add(element.id, element);
				}
				
			}

        }
        
	

	} 

	// Defined in table: UI
	
  [System.Serializable]
	public partial class UIDefine
	{
	
		
		/// <summary> 
		/// 索引
		/// </summary>
		public int id = 0; 
		
		/// <summary> 
		/// 文本数据
		/// </summary>
		public string name = ""; 
		
		
		public int resourceId = 0; 
		
		/// <summary> 
		/// UI窗体显示类型  0: Normal(普通) 1: ReverseChange(反向切换) 2: HideOther(隐藏其他) 3: Single(同类型同时只能显示一个)
		/// </summary>
		public int uiShowMode = 0; 
		
		/// <summary> 
		/// UI窗体位置类型  0：Normal(普通窗体) 1: Fixed(固定窗体,介于普通和弹窗之间，不会屏蔽普通窗体的操作) 2: PopUp(弹出窗体,在普通和弹窗之上，会屏蔽普通和固定窗体的操作) 3、4、5自定义
		/// </summary>
		public int uiShowType = 0; 
		
		/// <summary> 
		/// UI窗体透明类型 0：完全透明不能穿透 Lucency, 1：半透明不能穿透 Translucence, 2：低透明度不能穿透 Impenetrable, 3：可以穿透 Penetrate
		/// </summary>
		public int uiLucencyType = 0; 
		
		/// <summary> 
		/// UI界面组标识 具有相同组标识的UI具有相同的显示隐藏时机
		/// </summary>
		public int groupId = 0; 
	
	

	} 

}
