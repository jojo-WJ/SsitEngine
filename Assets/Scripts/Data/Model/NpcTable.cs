// Generated by github.com/davyxu/tabtoy
// Version: 2.9.0
// DO NOT EDIT!!
using System.Collections.Generic;

namespace Table
{
	
	

	// Defined in table: NpcTableModel
	
  [System.Serializable]
	public partial class NpcTableModel
	{
	
		public Tabtoy.Logger TableLogger = Tabtoy.Logger.Instance();
	
		
		/// <summary> 
		/// Npc
		/// </summary>
		public List<NpcDefine> Npc = new List<NpcDefine>(); 
	
	
		#region Index code
	 	Dictionary<int, NpcDefine> _NpcByID = new Dictionary<int, NpcDefine>();
        public NpcDefine GetNpcByID(int ID, NpcDefine def = default(NpcDefine))
        {
            NpcDefine ret;
            if ( _NpcByID.TryGetValue( ID, out ret ) )
            {
                return ret;
            }
			
			if ( def == default(NpcDefine) )
			{
				TableLogger.ErrorLine("GetNpcByID failed, ID: {0}", ID);
			}

            return def;
        }
		
		public string GetBuildID(){
			return "d41d8cd98f00b204e9800998ecf8427e";
		}
	
		#endregion
      public static void Deserialize( NpcTableModel ins)
		{
            			// Build Npc Index
			for( int i = 0;i< ins.Npc.Count;i++)
			{
				var element = ins.Npc[i];
				
				ins._NpcByID.Add(element.ID, element);
				
			}

        }
        
      public void DeserializeRe( NpcTableModel ins)
		{
            			// Build Npc Index
			for( int i = 0;i< ins.Npc.Count;i++)
			{
				var element = ins.Npc[i];
				
				if(!_NpcByID.ContainsKey(element.ID))
				{
					this.Npc.Add(ins.Npc[i]);
					_NpcByID.Add(element.ID, element);
				}
				
			}

        }
        
	

	} 

	// Defined in table: Npc
	
  [System.Serializable]
	public partial class NpcDefine
	{
	
		
		/// <summary> 
		/// id 60000+（用于代码判断）
		/// </summary>
		public int ID = 0; 
		
		/// <summary> 
		/// 映射itemBase的ID
		/// </summary>
		public int MapId = 0; 
		
		/// <summary> 
		/// 名称
		/// </summary>
		public string Name = ""; 
		
		/// <summary> 
		/// 名称
		/// </summary>
		public string Profession = ""; 
		
		/// <summary> 
		/// 描述
		/// </summary>
		public string Desc = ""; 
		
		/// <summary> 
		/// 道具图标Id
		/// </summary>
		public int IconId = 0; 
		
		/// <summary> 
		/// 编辑器显示模型id
		/// </summary>
		public int BackShowModelId = 0; 
		
		/// <summary> 
		/// 附属技能列表
		/// </summary>
		public List<int> AttachedSkillList = new List<int>(); 
		
		/// <summary> 
		/// 附属道具列表
		/// </summary>
		public List<int> AttachedItemList = new List<int>(); 
		
		/// <summary> 
		/// 附属装备列表
		/// </summary>
		public List<int> AttachedEquipList = new List<int>(); 
	
	

	} 

}
