// Generated by github.com/davyxu/tabtoy
// Version: 2.9.0
// DO NOT EDIT!!
using System.Collections.Generic;

namespace Table
{
	
	// Defined in table: Atlas
	public enum EnAltasType
	{
		
		
		None = 0, 
		
		
		EnSceneObjectIcon = 1000, 
		
		
		EnSkillIcon = 1001, 
	
	}
	
	

	// Defined in table: AtlasTableModel
	
  [System.Serializable]
	public partial class AtlasTableModel
	{
	
		public Tabtoy.Logger TableLogger = Tabtoy.Logger.Instance();
	
		
		/// <summary> 
		/// Atlas
		/// </summary>
		public List<AtlasDefine> Atlas = new List<AtlasDefine>(); 
	
	
		#region Index code
	 	Dictionary<int, AtlasDefine> _AtlasByid = new Dictionary<int, AtlasDefine>();
        public AtlasDefine GetAtlasById(int id, AtlasDefine def = default(AtlasDefine))
        {
            AtlasDefine ret;
            if ( _AtlasByid.TryGetValue( id, out ret ) )
            {
                return ret;
            }
			
			if ( def == default(AtlasDefine) )
			{
				TableLogger.ErrorLine("GetAtlasByid failed, id: {0}", id);
			}

            return def;
        }
		
		public string GetBuildID(){
			return "d41d8cd98f00b204e9800998ecf8427e";
		}
	
		#endregion
      public static void Deserialize( AtlasTableModel ins)
		{
            			// Build Atlas Index
			for( int i = 0;i< ins.Atlas.Count;i++)
			{
				var element = ins.Atlas[i];
				
				ins._AtlasByid.Add(element.id, element);
				
			}

        }
        
      public void DeserializeRe( AtlasTableModel ins)
		{
            			// Build Atlas Index
			for( int i = 0;i< ins.Atlas.Count;i++)
			{
				var element = ins.Atlas[i];
				
				if(!_AtlasByid.ContainsKey(element.id))
				{
					this.Atlas.Add(ins.Atlas[i]);
					_AtlasByid.Add(element.id, element);
				}
				
			}

        }
        
	

	} 

	// Defined in table: Atlas
	
  [System.Serializable]
	public partial class AtlasDefine
	{
	
		
		/// <summary> 
		/// 索引
		/// </summary>
		public int id = 0; 
		
		/// <summary> 
		/// 关联资源id
		/// </summary>
		public int resourceId = 0; 
	
	

	} 

}
