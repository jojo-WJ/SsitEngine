// Generated by github.com/davyxu/tabtoy
// Version: 2.9.0
// DO NOT EDIT!!
using System.Collections.Generic;

namespace Table
{
	
	

	// Defined in table: PlayerTableModel
	
  [System.Serializable]
	public partial class PlayerTableModel
	{
	
		public Tabtoy.Logger TableLogger = Tabtoy.Logger.Instance();
	
		
		/// <summary> 
		/// Player
		/// </summary>
		public List<PlayerDefine> Player = new List<PlayerDefine>(); 
	
	
		#region Index code
	 	Dictionary<int, PlayerDefine> _PlayerByID = new Dictionary<int, PlayerDefine>();
        public PlayerDefine GetPlayerByID(int ID, PlayerDefine def = default(PlayerDefine))
        {
            PlayerDefine ret;
            if ( _PlayerByID.TryGetValue( ID, out ret ) )
            {
                return ret;
            }
			
			if ( def == default(PlayerDefine) )
			{
				TableLogger.ErrorLine("GetPlayerByID failed, ID: {0}", ID);
			}

            return def;
        }
		
		public string GetBuildID(){
			return "d41d8cd98f00b204e9800998ecf8427e";
		}
	
		#endregion
      public static void Deserialize( PlayerTableModel ins)
		{
            			// Build Player Index
			for( int i = 0;i< ins.Player.Count;i++)
			{
				var element = ins.Player[i];
				
				ins._PlayerByID.Add(element.ID, element);
				
			}

        }
        
      public void DeserializeRe( PlayerTableModel ins)
		{
            			// Build Player Index
			for( int i = 0;i< ins.Player.Count;i++)
			{
				var element = ins.Player[i];
				
				if(!_PlayerByID.ContainsKey(element.ID))
				{
					this.Player.Add(ins.Player[i]);
					_PlayerByID.Add(element.ID, element);
				}
				
			}

        }
        
	

	} 

	// Defined in table: Player
	
  [System.Serializable]
	public partial class PlayerDefine
	{
	
		
		/// <summary> 
		/// id 60000+（用于代码判断）
		/// </summary>
		public int ID = 0; 
		
		/// <summary> 
		/// 映射itemBase的ID
		/// </summary>
		public int MapId = 0; 
		
		/// <summary> 
		/// 名称
		/// </summary>
		public string Name = ""; 
		
		/// <summary> 
		/// 名称
		/// </summary>
		public string Profession = ""; 
		
		/// <summary> 
		/// 描述
		/// </summary>
		public string Desc = ""; 
		
		/// <summary> 
		/// 道具图标Id
		/// </summary>
		public int IconId = 0; 
		
		/// <summary> 
		/// 编辑器显示模型id
		/// </summary>
		public int BackShowModelId = 0; 
		
		/// <summary> 
		/// 附属技能列表
		/// </summary>
		public List<int> AttachedSkillList = new List<int>(); 
		
		/// <summary> 
		/// 附属道具列表
		/// </summary>
		public List<int> AttachedItemList = new List<int>(); 
		
		/// <summary> 
		/// 附属装备列表
		/// </summary>
		public List<int> AttachedEquipList = new List<int>(); 
	
	

	} 

}
